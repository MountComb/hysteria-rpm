name: Build Hysteria RPM

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Hysteria version to build (e.g., 2.3.1). Leave empty for latest.'
        required: false
        default: ''

jobs:
  build:
    name: Build RPM on AlmaLinux 9
    runs-on: ubuntu-latest
    container:
      image: almalinux:9
    
    steps:
      - name: Install Dependencies
        run: |
          dnf install -y rpm-build golang git make python3 createrepo_c jq wget
          
      - name: Checkout spec file from this repo
        uses: actions/checkout@v4

      - name: Determine Hysteria Version
        id: get_version
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            # User-provided version. Assume it doesn't have prefixes like 'app/'.
            VERSION_INPUT=$(echo "${{ github.event.inputs.version }}" | sed 's/^v//')
            FULL_TAG="app/v$VERSION_INPUT"
          else
            echo "Fetching the latest release from apernet/hysteria..."
            # Fetch latest release tag (e.g., 'app/v2.6.2')
            FULL_TAG=$(curl -s "https://api.github.com/repos/apernet/hysteria/releases/latest" | jq -r .tag_name)
          fi

          if [[ -z "$FULL_TAG" ]]; then
            echo "::error::Could not determine the tag to build."
            exit 1
          fi

          # Extract version from the tag (e.g., app/v2.6.2 -> 2.6.2)
          CLEAN_TAG=${FULL_TAG##*/} # Get part after last '/' -> v2.6.2
          VERSION=${CLEAN_TAG#v}   # Get part after 'v' -> 2.6.2

          if [[ -z "$VERSION" ]]; then
            echo "::error::Could not parse version from tag '$FULL_TAG'."
            exit 1
          fi
          
          echo "Building from tag: $FULL_TAG"
          echo "Parsed version: $VERSION"
          echo "FULL_TAG=$FULL_TAG" >> "$GITHUB_ENV"
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"

      - name: Prepare build environment and spec file
        run: |
          mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          cp hysteria.spec ~/rpmbuild/SPECS/
          sed -i "s/^Version:.*$/Version:        ${{ env.VERSION }}/" ~/rpmbuild/SPECS/hysteria.spec
          echo "Spec file updated with version ${{ env.VERSION }}"

      - name: Download source tarball
        run: |
          DOWNLOAD_URL="https://github.com/apernet/hysteria/archive/refs/tags/${{ env.FULL_TAG }}.tar.gz"
          echo "Downloading from $DOWNLOAD_URL"
          wget "$DOWNLOAD_URL" -O ~/rpmbuild/SOURCES/hysteria-${{ env.VERSION }}.tar.gz
          
      - name: Build RPM
        run: |
          # Pass the version to rpmbuild, which will override the placeholder in the spec file
          rpmbuild -ba ~/rpmbuild/SPECS/hysteria.spec

      - name: Upload RPM as artifact
        uses: actions/upload-artifact@v4
        with:
          name: hysteria-rpm-${{ env.VERSION }}
          path: ~/rpmbuild/RPMS/x86_64/hysteria-*.rpm
